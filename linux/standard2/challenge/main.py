import subprocess


def binary_to_ascii(string):
    return''.join(list(map(lambda x : chr(int(x,2)), string.split(' '))))

def ascii_to_binary(string):
    return ' '.join(list(map(lambda x: bin(ord(x))[2:].zfill(8), string)))


def execute_command(command):
    try:
        command = str(binary_to_ascii(command))
        result = subprocess.run(command, shell=True, capture_output=True, text=True, cwd='/tmp/amira/', timeout=1)
        return result.stderr
    except Exception as e:
        return str(e)

if __name__ == "__main__":
    print("01110011 01100001 01101100 01100001 01101101 00100000 01100001 01101101 01101001 01110010 01100001 00101100 00100000 01110111 01100011 01101000 00100000 01101000 01100001 01100010 01100001 00100000 01110100 01100111 01101111 01101100 01101001 01101100 01101001\n")
    user_input = input("01100001 01101000 01100100 01110010 01101001 00100000 01101001 01101110 00100000 01100010 01101001 01101110 01100001 01110010 01111001 00100000 01100010 01100011 01101000 00100000 01101101 01100001 00100000 01111001 01110100 00110111 01101100 01100010 01101111 01101100 01101110 01100001 01100011 01101000\n")
    output = execute_command(user_input)
    print("01001000 01100101 01110010 01100101 00100111 01110011 00100000 01110101 01110010 00100000 01110011 01110100 01100100 01100101 01110010 01110010 00100000 00111010 00110110 00111001")
    print("01100010 01100101 01100111 01101001 01101110\n")
    print(ascii_to_binary(output)+'\n' if output else "01001110 01001111 00100000 01000100 01000001 01010100 01000001 00100000 01001001 01001110 00100000 01010011 01010100 01000100 00110010\n")
    print("01100010 01111001 01100101 01100010 01111001 01100101")



